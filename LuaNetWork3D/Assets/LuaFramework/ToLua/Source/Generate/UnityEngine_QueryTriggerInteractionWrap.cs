//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_QueryTriggerInteractionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.QueryTriggerInteraction));
		L.RegVar("UseGlobal", get_UseGlobal, null);
		L.RegVar("Ignore", get_Ignore, null);
		L.RegVar("Collide", get_Collide, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.QueryTriggerInteraction>.Check = CheckType;
		StackTraits<UnityEngine.QueryTriggerInteraction>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.QueryTriggerInteraction arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.QueryTriggerInteraction), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseGlobal(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.QueryTriggerInteraction.UseGlobal);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ignore(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.QueryTriggerInteraction.Ignore);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Collide(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.QueryTriggerInteraction.Collide);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.QueryTriggerInteraction o = (UnityEngine.QueryTriggerInteraction)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

