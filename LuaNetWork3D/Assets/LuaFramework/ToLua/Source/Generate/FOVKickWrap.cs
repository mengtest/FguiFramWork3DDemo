//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FOVKickWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FOVKick), typeof(System.Object));
		L.RegFunction("Setup", Setup);
		L.RegFunction("ChangeCamera", ChangeCamera);
		L.RegFunction("FOVKickUp", FOVKickUp);
		L.RegFunction("FOVKickDown", FOVKickDown);
		L.RegFunction("New", _CreateFOVKick);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Camera", get_Camera, set_Camera);
		L.RegVar("originalFov", get_originalFov, set_originalFov);
		L.RegVar("FOVIncrease", get_FOVIncrease, set_FOVIncrease);
		L.RegVar("TimeToIncrease", get_TimeToIncrease, set_TimeToIncrease);
		L.RegVar("TimeToDecrease", get_TimeToDecrease, set_TimeToDecrease);
		L.RegVar("IncreaseCurve", get_IncreaseCurve, set_IncreaseCurve);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFOVKick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FOVKick obj = new FOVKick();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FOVKick.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FOVKick obj = (FOVKick)ToLua.CheckObject<FOVKick>(L, 1);
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			obj.Setup(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FOVKick obj = (FOVKick)ToLua.CheckObject<FOVKick>(L, 1);
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			obj.ChangeCamera(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FOVKickUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FOVKick obj = (FOVKick)ToLua.CheckObject<FOVKick>(L, 1);
			System.Collections.IEnumerator o = obj.FOVKickUp();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FOVKickDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FOVKick obj = (FOVKick)ToLua.CheckObject<FOVKick>(L, 1);
			System.Collections.IEnumerator o = obj.FOVKickDown();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Camera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			UnityEngine.Camera ret = obj.Camera;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Camera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_originalFov(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float ret = obj.originalFov;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index originalFov on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FOVIncrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float ret = obj.FOVIncrease;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FOVIncrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimeToIncrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float ret = obj.TimeToIncrease;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TimeToIncrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TimeToDecrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float ret = obj.TimeToDecrease;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TimeToDecrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IncreaseCurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			UnityEngine.AnimationCurve ret = obj.IncreaseCurve;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IncreaseCurve on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Camera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			obj.Camera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Camera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_originalFov(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.originalFov = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index originalFov on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FOVIncrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.FOVIncrease = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FOVIncrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TimeToIncrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.TimeToIncrease = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TimeToIncrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TimeToDecrease(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.TimeToDecrease = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TimeToDecrease on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IncreaseCurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FOVKick obj = (FOVKick)o;
			UnityEngine.AnimationCurve arg0 = (UnityEngine.AnimationCurve)ToLua.CheckObject(L, 2, typeof(UnityEngine.AnimationCurve));
			obj.IncreaseCurve = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IncreaseCurve on a nil value");
		}
	}
}

