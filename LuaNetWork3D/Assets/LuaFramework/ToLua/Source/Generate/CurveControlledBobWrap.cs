//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CurveControlledBobWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CurveControlledBob), typeof(System.Object));
		L.RegFunction("Setup", Setup);
		L.RegFunction("DoHeadBob", DoHeadBob);
		L.RegFunction("New", _CreateCurveControlledBob);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("HorizontalBobRange", get_HorizontalBobRange, set_HorizontalBobRange);
		L.RegVar("VerticalBobRange", get_VerticalBobRange, set_VerticalBobRange);
		L.RegVar("Bobcurve", get_Bobcurve, set_Bobcurve);
		L.RegVar("VerticaltoHorizontalRatio", get_VerticaltoHorizontalRatio, set_VerticaltoHorizontalRatio);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateCurveControlledBob(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				CurveControlledBob obj = new CurveControlledBob();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: CurveControlledBob.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CurveControlledBob obj = (CurveControlledBob)ToLua.CheckObject<CurveControlledBob>(L, 1);
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.Setup(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoHeadBob(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CurveControlledBob obj = (CurveControlledBob)ToLua.CheckObject<CurveControlledBob>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 o = obj.DoHeadBob(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HorizontalBobRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float ret = obj.HorizontalBobRange;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HorizontalBobRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VerticalBobRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float ret = obj.VerticalBobRange;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticalBobRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bobcurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			UnityEngine.AnimationCurve ret = obj.Bobcurve;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Bobcurve on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VerticaltoHorizontalRatio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float ret = obj.VerticaltoHorizontalRatio;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticaltoHorizontalRatio on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HorizontalBobRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.HorizontalBobRange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HorizontalBobRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_VerticalBobRange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.VerticalBobRange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticalBobRange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Bobcurve(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			UnityEngine.AnimationCurve arg0 = (UnityEngine.AnimationCurve)ToLua.CheckObject(L, 2, typeof(UnityEngine.AnimationCurve));
			obj.Bobcurve = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Bobcurve on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_VerticaltoHorizontalRatio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CurveControlledBob obj = (CurveControlledBob)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.VerticaltoHorizontalRatio = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VerticaltoHorizontalRatio on a nil value");
		}
	}
}

